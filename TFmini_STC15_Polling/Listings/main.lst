C51 COMPILER V9.57.0.0   MAIN                                                              02/13/2018 16:12:51 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mai
                    -n.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /******************************************************************************
   2          Author: weifengdq@163.com
   3          Date: 201802
   4          Link: TFmini TX(Green) -- STC15 RXD(P30)
   5                                    STC15 TXD(P31) -- PC USBtoUART RX
   6          Note: When you download program, please break P30 with TFmini, 
   7                then Link P30 with PC USBtoUART TX
   8          ******************************************************************************/
   9          
  10          #include "stc15f2k60s2.h"
  11          #include <stdio.h>
  12          
  13          #define FOSC 11059200L  //System frequency
  14          
  15          void Uart_Init(unsigned long baudrate) {
  16   1          SCON = 0x50;        //8-bit variable UART
  17   1              AUXR = 0x40;    //set Timer1 1T Mode
  18   1          TMOD = 0x00;        //Set Timer1 as 16-bit auto reload mode
  19   1              TL1 = (65536 - (FOSC/4/baudrate));   //Set auto-reload vaule
  20   1          TH1 = (65536 - (FOSC/4/baudrate))>>8;
  21   1          TR1 = 1;    //Timer1 start run
  22   1              SBUF = '\n';    //It's needed to give SBUF a random character if printf is used.
  23   1      }
  24          
  25          /******************************************************************************
  26           TFmini 9 bytes output: 
  27           [0x59, 0x59, distanceL, distanceH, strengthL, strengthH, Mode, 0x00, checksum]
  28           *****************************************************************************/
  29          unsigned int TFmini_GetValue() {
  30   1              static unsigned char i = 0;
  31   1              unsigned char j = 0;
  32   1              unsigned int checksum = 0; 
  33   1              static unsigned char rx[9];
  34   1              unsigned int distance = 0;
  35   1              if(RI) {        //serialport receive a character
  36   2                      RI = 0;
  37   2                      rx[i] = SBUF;
  38   2                      if(rx[0] != 0x59) {
  39   3                              i = 0;
  40   3                      } else if(i == 1 && rx[1]!= 0x59) {
  41   3                              i = 0;
  42   3                      } else if(i == 8) {
  43   3                              for(j = 0; j < 8; j++) {
  44   4                                      checksum += rx[j];
  45   4                              }
  46   3                              if(rx[8] == (checksum % 256)) {
  47   4                                      distance = rx[2] + rx[3] * 256;
  48   4                              }
  49   3                              i = 0;
  50   3                      } else {
  51   3                              i++;
  52   3                      }       
  53   2              }
  54   1              return distance;
C51 COMPILER V9.57.0.0   MAIN                                                              02/13/2018 16:12:51 PAGE 2   

  55   1      }
  56          
  57          void main() {
  58   1              unsigned int distance = 0;
  59   1              
  60   1              Uart_Init(115200);      //baudrate: 115200; stop: 1; parity: 0.
  61   1      
  62   1              printf("Hello, TFmini!\r\n");
  63   1              
  64   1          while(1) {
  65   2                      distance = TFmini_GetValue();
  66   2                      while(!distance) {
  67   3                              distance = TFmini_GetValue();
  68   3                              if(distance) {
  69   4                                      printf("%d\r\n", distance);
  70   4                              }
  71   3                      }
  72   2              }
  73   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
